<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="1024"
					   height="768"
					   creationComplete="windowedapplication1_creationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[
			import graphic.Ball;
			import graphic.Line;

			import mx.core.UIComponent;
			import mx.events.FlexEvent;

			private var ball1:Ball;
			private var ball2:Ball;

			private var line:Line;

			private var grp:UIComponent;

			private var t:Number=0;

			private var angle:Number=0;
			private var h:Number=0;
			private var vm:Number=50;

			private var p:Point;

			private var isDown:Boolean=false;

			protected function button1_clickHandler(event:MouseEvent):void {
				// TODO Auto-generated method stub
				this.isDown=!this.isDown;
				t=0;
			}

			/**
			 * 平抛
			 */ 
			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void {
				// TODO Auto-generated method stub
				this.ball1=new Ball(5);
				this.addElement(this.ball1);

				this.ball1.x=300;
				this.ball1.y=30;

				this.ball2=new Ball(2);
				this.addElement(this.ball2);

				this.ball2.x=300;
				this.ball2.y=30;

				this.line=new Line(1000);
				this.addElement(this.line);

				this.line.x=0;
				this.line.y=600;

				this.p=new Point();

				this.grp=new UIComponent();
				this.addElement(this.grp);

				this.grp.graphics.clear();
				this.grp.graphics.lineStyle(0, 0xff0000);

				this.addEventListener(Event.ENTER_FRAME, onEnterFrame);
			}

			private function onEnterFrame(e:Event):void {

				if (!this.isDown)
					return;

				this.ball2.x=this.p.x + vm * t;
				this.ball2.y=this.p.y + (9.8 * (t * t) / 2);


				this.grp.graphics.lineTo(this.ball2.x, this.ball2.y);

				t+=0.1;
			}

			protected function button2_clickHandler(event:MouseEvent):void {
				// TODO Auto-generated method stub

				this.ball1.x=Math.random() * this.stage.stageWidth;
				this.ball1.y=30;

				this.ball2.x=this.ball1.x;
				this.ball2.y=30;
				t=0;

				this.h=600 - 30;

				this.p.x=this.ball2.x;
				this.p.y=this.ball2.y;

				this.grp.graphics.moveTo(this.p.x, this.p.y);

			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>

	<s:Button x="205"
			  y="650"
			  label="按钮"
			  click="button1_clickHandler(event)"/>
	
	<s:Button x="310"
			  y="650"
			  label="按钮"
			  click="button2_clickHandler(event)"/>

</s:WindowedApplication>
